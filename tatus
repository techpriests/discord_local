Help on package google.generativeai.types in google.generativeai:

NNAAMMEE
    google.generativeai.types - A collection of type definitions used throughout the library.

PPAACCKKAAGGEE  CCOONNTTEENNTTSS
    answer_types
    caching_types
    citation_types
    content_types
    discuss_types
    file_types
    generation_types
    helper_types
    image_types (package)
    model_types
    palm_safety_types
    permission_types
    retriever_types
    safety_types
    text_types

DDAATTAA
    AAnnyyMMooddeellNNaammeeOOppttiioonnss = typing.Union[str, google.generativeai.types.mode...
    BBaasseeMMooddeellNNaammeeOOppttiioonnss = typing.Union[str, google.generativeai.types.mod...
    BBlloobbTTyyppee = typing.Union[google.ai.generativelanguage_v1beta...ativeai....
    CCoonntteennttTTyyppee = typing.Union[google.ai.generativelanguage_v1beta....File...
    CCoonntteennttssTTyyppee = typing.Union[google.ai.generativelanguage_v1beta...veai...
    FFiilleeDDaattaaTTyyppee = typing.Union[google.generativeai.types.file_type....Fil...
    FFuunnccttiioonnDDeeccllaarraattiioonnTTyyppee = typing.Union[google.generativeai.types.conte...
    FFuunnccttiioonnLLiibbrraarryyTTyyppee = typing.Union[google.generativeai.types.content_t...
    GGeenneerraattiioonnCCoonnffiiggTTyyppee = typing.Union[google.ai.generativelanguage_v1bet...
    MMooddeellNNaammeeOOppttiioonnss = typing.Union[str, google.generativeai.types.mode......
    MMooddeellssIItteerraabbllee = typing.Iterable[google.generativeai.types.model_types...
    PPaarrttTTyyppee = typing.Union[google.ai.generativelanguage_v1beta....File, g...
    RReeqquueessttOOppttiioonnssTTyyppee = typing.Union[google.generativeai.types.helper_ty....
    SSttrriiccttCCoonntteennttTTyyppee = typing.Union[google.ai.generativelanguage_v1beta.....
    TToooollssTTyyppee = typing.Union[collections.abc.Iterable[typing.Uni...r, typi...
    TTuunneeddMMooddeellNNaammeeOOppttiioonnss = typing.Union[str, google.generativeai.types.mo...
    UUnniioonn = typing.Union
        Union type; Union[X, Y] means either X or Y.

        On Python 3.10 and higher, the | operator
        can also be used to denote unions;
        X | Y means the same thing to the type checker as Union[X, Y].

        To define a union, use e.g. Union[int, str]. Details:
        - The arguments must be types and there must be at least one.
        - None as an argument is a special case and is replaced by
          type(None).
        - Unions of unions are flattened, e.g.::

            assert Union[Union[int, str], float] == Union[int, str, float]

        - Unions of a single argument vanish, e.g.::

            assert Union[int] == int  # The constructor actually returns int

        - Redundant arguments are skipped, e.g.::

            assert Union[int, str, int] == Union[int, str]

        - When comparing unions, the argument order is ignored, e.g.::

            assert Union[int, str] == Union[str, int]

        - You cannot subclass or instantiate a union.
        - You can use Optional[X] as a shorthand for Union[X, None].

FFIILLEE
    /home/vscode/.local/lib/python3.12/site-packages/google/generativeai/types/__init__.py

