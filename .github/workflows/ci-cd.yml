name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    # Add tests here when you have them
    # - name: Run tests
    #   run: python -m pytest

  cd:
    needs: ci
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Install Docker if not installed
          if ! command -v docker &> /dev/null; then
            sudo yum update -y
            sudo yum install docker git -y
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -a -G docker ec2-user
          fi

          # Install Docker Compose if not installed
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          # Deploy application
          cd ~/discord_local
          echo "TOKEN = '${{ secrets.DISCORD_TOKEN }}'" > config.py
          echo "STEAM_KEY = '${{ secrets.STEAM_API_KEY }}'" >> config.py
          echo "WEATHER_API_KEY = '${{ secrets.WEATHER_API_KEY }}'" >> config.py
          git pull
          docker-compose down
          docker-compose build
          docker-compose up -d 