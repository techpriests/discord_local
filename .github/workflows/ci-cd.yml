name: CI/CD Pipeline

on:
  push:
    branches: [ main ]  # Only run on main
  pull_request:
    branches: [ main ]  # Only run on PRs to main

jobs:
  ci:
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install

    - name: Run tests
      run: poetry run pytest
      
    - name: Run static analysis
      run: |
        poetry run mypy src
        poetry run ruff check src
        poetry run black src --check
        poetry run isort src --check

  cd:
    needs: ci
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Install Docker if not installed
          if ! command -v docker &> /dev/null; then
            sudo yum update -y
            sudo yum install docker git -y
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -a -G docker ec2-user
          fi

          # Install Docker Compose if not installed
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          # Deploy application
          cd ~/discord_local
          git pull origin main
          
          # Use environment variables in docker-compose
          echo "DISCORD_BOT_TOKEN='${{ secrets.DISCORD_TOKEN }}'" > .env
          echo "STEAM_API_KEY='${{ secrets.STEAM_API_KEY }}'" >> .env
          echo "OPENWEATHER_API_KEY='${{ secrets.WEATHER_API_KEY }}'" >> .env
          
          docker-compose down
          docker-compose build
          docker-compose up -d 