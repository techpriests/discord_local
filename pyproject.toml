[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "discord-bot"
version = "0.1.0"
description = "Discord bot with various utility commands"
authors = ["Your Name <your.email@example.com>"]
packages = [
    { include = "src" }
]

[tool.poetry.dependencies]
python = "^3.10"
"discord.py" = "^2.3.2"
aiohttp = "^3.9.1"
python-dotenv = "^1.0.0"
numpy = "^1.26.3"  # Added for optimized gacha calculations
pytz = "^2023.3"
matplotlib = "^3.10.0"  # For generating player count charts
google-generativeai = "^0.8.4"  # For Gemini AI integration
psutil = "^5.9.8"  # For system resource monitoring
beautifulsoup4 = "^4.13.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
mypy = "^1.0.0"
ruff = "^0.1.0"
black = "^23.0.0"
isort = "^5.12.0"
docstr-coverage = "^2.3.0"
types-pytz = "^2024.2.0.20241221"
types-psutil = "^5.9.5.20240106"  # Type stubs for psutil

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyx?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "B", "I"]
ignore = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["E501"]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]